{"version":3,"sources":["components/HeaderNav.js","pages/Home.js","pages/About.js","pages/PageNotFound.js","pages/components/BitcoinCourse.js","pages/PageBTC.js","components/Footer.js","pages/components/PrivatCourse.js","pages/PbankCourse.js","App.js","serviceWorker.js","index.js"],"names":["HeaderNav","Navbar","bg","variant","Brand","href","Nav","className","to","React","Component","Home","class","About","PageNotFound","PrivatCourse","props","state","error","isLoaded","items","fetch","then","res","json","result","setState","BTC","this","message","USD","EUR","PageBTC","BitcoinCourse","Footer","map","item","key","ccy","base_ccy","buy","sale","PbankCourse","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.327f0120.chunk.js","sourcesContent":["import React from 'react'\nimport { Navbar, Nav } from 'react-bootstrap';\nimport {Link} from \"react-router-dom\";\n\nexport default class HeaderNav extends React.Component {\n    render () {\n        return(\n            <div>\n                  <Navbar bg=\"dark\" variant=\"dark\">\n                        <Navbar.Brand href=\"#home\">Live courses</Navbar.Brand>\n                        <Nav className=\"mr-auto\">\n                            <Link to=\"/\" className='nav-link'>Home</Link>\n                            <Link to=\"/btcourse\" className='nav-link'>BTC course</Link>\n                            <Link to=\"/privatbankcourse\" className='nav-link'>Privat bank course</Link>\n                            <Link to=\"/about\" className='nav-link'>About</Link>\n                        </Nav>\n                    </Navbar>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nconst Home = () =>{\n    return (\n        <div>\n          <div className=\"card bg-dark text-white\">\n            <h5 className=\"card-header\">Courses</h5>\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">BTC course</h5>\n                <p className=\"card-text\">In this page you can know live Bitcoin course.</p>\n                <Link to=\"/btcourse\" class=\"btn btn-primary\">BTC course page</Link>\n            </div>\n            </div>  \n        </div>\n    )\n}\nexport default Home;","import React from 'react';\n\nconst About = () =>{\n    return(\n        <div>\n            <div className=\"jumbotron\">\n                <div className=\"container\">\n                    <h1 className=\"display-4\">About us </h1>\n                    <p className=\"lead\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Similique, vel?</p>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default About;","import React from 'react'\n\nconst PageNotFound = () =>{\n    return(\n        <div className=\"jumbotron\">\n            <div className=\"container\">\n                <h1 className=\"display-4\">Page not found</h1>\n                <p className=\"lead\">This is not the web page you looking for.</p>\n            </div>\n        </div>\n    )\n}\nexport default PageNotFound;","import React from \"react\";\n\nclass PrivatCourse extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: []\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH&tsyms=USD,EUR\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        items: result.BTC\n                    });\n                },\n                // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\n                // чтобы не перехватывать исключения из ошибок в самих компонентах.\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    }\n\n    render() {\n        const { error, isLoaded, items } = this.state;\n        if (error) {\n            return <div>Ошибка: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Загрузка...</div>;\n        } else {\n            return (\n                <div>\n                    <h1>BTC ₿ = {items.USD} USD $</h1>\n                    <h1>BTC ₿ = {items.EUR} EUR €</h1>\n                </div>\n            );\n        }\n    }\n}\nexport default PrivatCourse;","import React from 'react';\nimport BitcoinCourse from './components/BitcoinCourse'\n\nconst PageBTC = () =>{\n    return (\n        <div>\n            <BitcoinCourse></BitcoinCourse>\n        </div>\n    )\n}\nexport default PageBTC;","import React from \"react\";\n\nexport default function Footer ()  {\n    return(\n        <footer>\n            <div className=\"footer-copyright text-center py-3 bg-dark text-white\">© 2020 Copyright:\n                <a href=\"https://twitter.com/AlexPavlovskyi\"> Alexey Pavlovskyi</a>\n            </div>\n        </footer>\n    )\n}\n","import React from \"react\";\n\nclass PrivatCourse extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: []\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        items: result\n                    });\n                },\n                // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\n                // чтобы не перехватывать исключения из ошибок в самих компонентах.\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    }\n\n    render() {\n        const { error, isLoaded, items } = this.state;\n        if (error) {\n            return <div>Ошибка: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Загрузка...</div>;\n        } else {\n            return (\n                <ul className='none-marked'>\n                    {items.map(item => (\n                        <li key={item.ccy}>\n                            <h2>\n                            {item.ccy} в {item.base_ccy} {item.buy} Покупка {item.sale} Продажа\n                            </h2>\n                        </li>\n                    ))}\n                </ul>\n            );\n        }\n    }\n}\nexport default PrivatCourse;","import React from \"react\";\nimport PrivatCourse from \"./components/PrivatCourse\";\nconst PbankCourse = () =>{\n    return(\n        <div>\n            <PrivatCourse/>\n        </div>\n    )\n}\nexport default PbankCourse;","import React from 'react';\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\nimport './App.scss';\nimport HeaderNav from './components/HeaderNav';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport PageNotFound from './pages/PageNotFound';\nimport PageBTC from \"./pages/PageBTC\";\nimport Footer from \"./components/Footer\";\nimport PbankCourse from \"./pages/PbankCourse\";\n\nfunction App() {\n  return (\n    <Router>\n      <HeaderNav/>\n    <div className=\"wrapper\">\n      <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/about\" component={About}/>\n        <Route path=\"/btcourse\" component={PageBTC}/>\n        <Route path=\"/privatbankcourse\" component={PbankCourse}/>\n        <Route component={PageNotFound}/>\n      </Switch>\n    </div>\n    <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}